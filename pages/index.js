import Head from 'next/head';
import { useState, useEffect } from 'react';
import { v4 as uuidv4 } from 'uuid';
import TodoForm from '../components/TodoForm/TodoForm';
import TodoList from '../components/TodoList/TodoList';
import Card from '../components/UI/Card/Card';
import styles from '../styles/Home.module.css';
import TodoCard from '../components/UI/TodoCard/TodoCard';
import axios from 'axios';

export default function Home() {
	const [loading, setLoading] = useState(false);
	const [todos, setTodos] = useState([]);

	useEffect(() => {
		setLoading(true);
		setTimeout(() => {
			fetchTodos();
		}, 2000);
		// fetchTodos();
		setLoading(false);
	}, []);
	const fetchTodos = async () => {
		await axios
			.get('https://jsonplaceholder.typicode.com/todos')
			.then((res) => {
				console.log(res.data.filter((item) => item['userId'] === 1));
				setTodos(res.data.filter((item) => item['userId'] === 1));
			});
	};

	const onAddTodos = async (title) => {
		await fetch('https://jsonplaceholder.typicode.com/todos', {
			method: 'POST',
			body: JSON.stringify({
				userId: 1,
				title: title,
				completed: false,
			}),
			headers: {
				'Content-type': 'application/json; charset=UTF-8',
			},
		})
			.then((res) => {
				if (res.status !== 201) {
					return;
				} else {
					return res.json();
				}
			})
			.then((data) => {
				setTodos((prevState) => [{ ...data, id: uuidv4() }, ...prevState]);
			})
			.catch((err) => {
				alert(err);
			});
	};

	const deleteTaskHandler = async (id) => {
		await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`, {
			method: 'DELETE',
		})
			.then((res) => {
				// console.log(res)
				if (res.status !== 200) {
					return;
				} else {
					console.log(id);
					const deleteTodos = todos.filter((item) => item.id !== id);
					setTodos(deleteTodos);
				}
			})
			.catch((err) => {
				alert(err);
			});
	};

	const toggleHandler = async (id, done) => {
		await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`, {
			method: 'PATCH',
			body: JSON.stringify({
				completed: done,
			}),
			headers: {
				'Content-type': 'application/json; charset=UTF-8',
			},
		})
			.then((res) => {
				// console.log(res);
				if (res.status !== 200) {
					return;
				} else {
					return res.json();
				}
			})
			.then((data) => {
				// console.log(data);
				setTodos((prevState) =>
					prevState.map((todo) => {
						return todo.id === id ? { ...data } : todo;
					})
				);
			});
	};

	// const toggleHandler = (id, done) => {
	// 	console.log(id);
	// 	const updatedTodo = todos.map((item) => {
	// 		if (item.id === id) {
	// 			return {
	// 				...item,
	// 				completed: done,
	// 			};
	// 		}
	// 		return item;
	// 	});

	// 	setTodos(updatedTodo);
	// };
	return (
		<div className={styles.container}>
			<Head>
				<title>Todo App | Be Productive</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>

			<main className={styles.main}>
				<div>
					<div className={styles.top}>
						<Card>
							<h2>Todo List App</h2>
							<TodoForm onAddTodo={onAddTodos} />
						</Card>
					</div>
					<div className={styles.bottom}>
						<TodoCard>
							<TodoList
								loading={loading}
								todoList={todos}
								onCompleted={toggleHandler}
								onDelete={deleteTaskHandler}
							/>
						</TodoCard>
					</div>
				</div>
			</main>
		</div>
	);
}
